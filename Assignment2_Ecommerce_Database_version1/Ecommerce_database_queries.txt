CREATE DATABASE Assignment2;
USE Assignment2;

-- Table creation queries 

CREATE TABLE Customers
(customer_id INT PRIMARY KEY AUTO_INCREMENT,
first_name VARCHAR(50) NOT NULL,
last_name VARCHAR(50) NOT NULL,
email VARCHAR(100) NOT NULL UNIQUE,
city VARCHAR(50) NOT NULL,
signup_date DATE NOT NULL);

CREATE TABLE Orders
(order_id INT PRIMARY KEY AUTO_INCREMENT,
customer_id INT NOT NULL,
order_date DATE NOT NULL,
total_amount DECIMAL(10,2) NOT NULL,
order_flag INT DEFAULT 1,
CONSTRAINT FK_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Products
(product_id INT PRIMARY KEY AUTO_INCREMENT,
product_name VARCHAR(100) NOT NULL UNIQUE,
category VARCHAR(50) NOT NULL,
price DECIMAL(10,2) NOT NULL);

CREATE TABLE Order_details
(order_detail_id INT PRIMARY KEY AUTO_INCREMENT,
order_id INT NOT NULL,
product_id INT NOT NULL,
quantity INT NOT NULL,
price DECIMAL(10,2) NOT NULL,
CONSTRAINT FK_order_id FOREIGN KEY(order_id) REFERENCES Orders(order_id),
CONSTRAINT FK_product_id FOREIGN KEY(product_id) REFERENCES Products(product_id));

CREATE INDEX idx_signup_date 
ON Customers(signup_date);

CREATE INDEX idx_city
ON Customers(city);

CREATE INDEX idx_order_date
ON Orders(order_date);

CREATE INDEX idx_total_amount
ON Orders(total_amount);

CREATE INDEX idx_category
ON Products(category);

-- Inserting values into tables

INSERT INTO Customers (first_name, last_name, email, city, signup_date) VALUES
('Amit', 'Sharma', 'amit.sharma@example.com', 'Mumbai', '2025-02-15'),
('Neha', 'Verma', 'neha.verma@example.com', 'Delhi', '2024-12-10'),
('Raj', 'Kumar', 'raj.kumar@example.com', 'Mumbai', '2024-05-01'),
('Priya', 'Singh', 'priya.singh@example.com', 'Bangalore', '2025-06-01'),
('Vikram', 'Joshi', 'vikram.joshi@example.com', 'Chennai', '2024-11-20'),
('Anita', 'Mehta', 'anita.mehta@example.com', 'Kolkata', '2025-04-25');


INSERT INTO Products (product_name, category, price) VALUES
('Laptop', 'Electronics', 55000.00),
('Headphones', 'Electronics', 2500.00),
('Notebook', 'Stationery', 50.00),
('Pen', 'Stationery', 10.00),
('Chair', 'Furniture', 3000.00),
('Table', 'Furniture', 7000.00),
('Monitor', 'Electronics', 12000.00);


INSERT INTO Orders (customer_id, order_date, total_amount) VALUES
(1, '2025-05-25', 57500.00),
(1, '2025-04-20', 5500.00);

INSERT INTO Orders (customer_id, order_date, total_amount) VALUES
(2, '2025-06-01', 750.00);


INSERT INTO Orders (customer_id, order_date, total_amount) VALUES
(3, '2025-05-10', 3050.00),
(3, '2025-06-05', 400.00);

INSERT INTO Orders (customer_id, order_date, total_amount) VALUES
(4, '2025-06-06', 250.00);

INSERT INTO Order_details (order_id, product_id, quantity, price) VALUES
(1, 1, 1, 55000.00),
(1, 2, 1, 2500.00); 

INSERT INTO Order_details (order_id, product_id, quantity, price) VALUES
(2, 5, 1, 3000.00),
(2, 2, 1, 2500.00);

INSERT INTO Order_details (order_id, product_id, quantity, price) VALUES
(3, 3, 10, 50.00),
(3, 4, 25, 10.00);

INSERT INTO Order_details (order_id, product_id, quantity, price) VALUES
(4, 5, 1, 3000.00),
(4, 4, 5, 10.00),
(5, 3, 4, 50.00),
(5, 4, 20, 10.00);

INSERT INTO Order_details (order_id, product_id, quantity, price) VALUES
(6, 4, 25, 10.00);


-- Query 1
SELECT customer_id, first_name, last_name, email, city, signup_date 
FROM Customers;

-- Query 2
SELECT order_id, customer_id, order_date, total_amount 
FROM Orders 
WHERE order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);

-- Query 3
SELECT product_name, price 
FROM Products;

-- Query 4
SELECT category, COUNT(product_id) AS count
FROM Products
GROUP BY category;

-- Query 5
SELECT customer_id, first_name, last_name, email, city, signup_date 
FROM Customers
WHERE city = 'Mumbai';

-- Query 6
SELECT order_id, customer_id, order_date, total_amount
FROM Orders
WHERE total_amount > 5000.00;

-- Query 7
SELECT customer_id, first_name, last_name, email, city, signup_date
FROM Customers
WHERE signup_date > '2024-01-01';

-- Query 8
SELECT Customers.first_name, Customers.last_name, Orders.order_id, Orders.order_date, Orders.total_amount
FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id;

-- Query 9
SELECT Order_details.order_id, Products.product_name, Order_details.quantity, Products.price 
FROM Products JOIN Order_details ON Products.product_id = Order_details.product_id ORDER BY order_id;

-- Query 10
SELECT customer_id, first_name, last_name, email, city, signup_date
FROM Customers
WHERE customer_id NOT IN (SELECT DISTINCT Customers.customer_id 
FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id);

-- Query 11
SELECT Customers.customer_id, first_name, last_name, SUM(total_amount) AS "amount spent"
FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id
GROUP BY Customers.customer_id;

-- Query 12
SELECT Products.product_id, product_name, SUM(quantity) as quantity_sold
FROM Order_details JOIN Products ON Order_details.product_id = Products.product_id
GROUP BY Products.product_id
ORDER BY quantity_sold DESC LIMIT 1;

-- Query 13
SELECT customer_id, AVG(total_amount) AS "average order value"
FROM Orders
GROUP BY customer_id;

-- Query 14
SELECT category, SUM(quantity * Products.price) as "total sales amount"
FROM Order_details JOIN Products ON Order_details.product_id = Products.product_id
GROUP BY Products.category;

-- Query 15
SELECT customer_id, first_name, last_name, total_spent
FROM (SELECT c.customer_id, c.first_name, c.last_name, SUM(total_amount) AS total_spent
FROM Orders o JOIN Customers c ON o.customer_id = c.customer_id 
Group by c.customer_id) sub 
WHERE total_spent > ( SELECT AVG(total_amount) FROM Orders); 

-- Query 16
SELECT product_id, product_name, category, price
FROM Products
WHERE product_id NOT IN (SELECT DISTINCT product_id FROM Order_details);

-- Query 17
SELECT customer_id, MAX(order_date) AS "most recent order"
FROM Orders
GROUP BY customer_id;

-- Query 18
SELECT c.customer_id, first_name, last_name, SUM(total_amount) AS total_spent
FROM Orders o JOIN Customers c ON o.customer_id = c.customer_id
GROUP BY c.customer_id
ORDER BY total_spent DESC;

-- Query 19
SELECT c.customer_id, first_name, last_name, COUNT(o.order_id) AS order_count
FROM Orders o JOIN Customers c ON o.customer_id = c.customer_id
GROUP BY c.customer_id
ORDER BY order_count DESC
LIMIT 3;

-- Query 20
SELECT Products.product_id, product_name, COUNT( DISTINCT customer_id) AS "unique customers"
FROM Order_details JOIN Orders ON Order_details.order_id = Orders.order_id JOIN Products ON Order_details.product_id = Products.product_id
GROUP BY Products.product_id;
